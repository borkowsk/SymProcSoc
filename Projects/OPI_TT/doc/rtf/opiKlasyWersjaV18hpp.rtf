{\rtf1\ansi\deff0\deftab720{\fonttbl{\f0\fmodern Courier New;}}
{\colortbl\red51\green153\blue255;\red0\green128\blue0;\red0\green0\blue0;\red255\green255\blue255;\red255\green255\blue255;\red128\green0\blue128;}
{\info{\comment Generated by the SynEdit RTF exporter}
{\title Untitled}}

\deflang1033\pard\plain\f0\fs20 \cf0\i // Transfer technologii 2011 - nag³ówk implementacji modelu     24-10-2011
\par ////////////////////////////////////////////////////////////////////////////////
\par // Klasy do kolejnej startowej wersji modelu  (dla danych na poziomie wersji 1.61)
\par ////////////////////////////////////////////////////////////////////////////////
\par \i0\cf1 #ifndef _opiKlasy_plik_naglowkowy_hpp_
\par #define _opiKlasy_plik_naglowkowy_hpp_
\par 
\par #include "spsModel.h"
\par #include "spsGenNode.h"
\par #include "spsGenProc.h"
\par #include "spsGenLink.h"
\par #include "spsParaLink.h"
\par #include "spsGenInfo.h"
\par #include "spsMatrixNode.h"
\par #include "INCLUDE/platform.hpp"
\par #include "INCLUDE/wb_ptr.hpp"
\par #include "INCLUDE/wb_bits.h"
\par \cf2\b using\b0\cb3  \cb4\b namespace\b0\cb3  \cb4 wbrtm;
\par 
\par \cf1 #include <stdlib.h>
\par #include <cassert>
\par #include <string>
\par #include <iostream>
\par \cf2\b using\b0\cb3  \cb4\b namespace\b0\cb3  \cb4 std;
\par 
\par \b extern\b0\cb3  \cb4\b float\b0\cb3   \cb4 TOWARZYSKA_NAJMNIEJSZA_WAGA;\cf0\i //=0.01;// dla	bool KontaktTowarzyski::Poprawny();
\par \i0\cf2\b extern\b0\cb3  \cb4\b float\b0\cb3   \cb4 JEDNOSTKOWA_WYPLATA;\cf0\i //=100;//Wartoœæ najmniejszej wp³aty/wyplaty. Sposób u¿ycia niejasny :-)
\par 
\par \i0\cf2\b extern\b0\cb3  \cb4\b float\b0\cb3   \cb4 WAGA_NA_DZIENDOBRY;\cf0\i //=0.1;//Wspó³czynnik zmniejszania wagi przy pierwszym kontakcie - nie mo¿e byæ za du¿a
\par \i0\cf2\b extern\b0\cb3  \cb4\b float\b0\cb3   \cb4 TEMPO_SPADKU_LINKU;\cf0\i // np. =0.01;//O jak¹ czêœæ link socjalny zanika przy nie u¿ywaniu
\par \i0\cf2\b extern\b0\cb3  \cb4\b float\b0\cb3   \cb4 TEMPO_WZROSTU_LINKU;\cf0\i // np. =0.1;//O jak¹ czêœæ link socjalny roœnie przy odpowiedzi
\par \i0\cf2\b extern\b0\cb3  \cb4\b char\b0 *\cb3  \cb4\b const\b0\cb3   \cb4 KONTO;\cf0\i //="Ruch konta"; //Marker komunikatu finansowego z przep³ywem
\par \i0\cf2\b extern\b0\cb3  \cb4\b char\b0 *\cb3  \cb4\b const\b0\cb3  \cb4 DZIENDOBRY;\cf0\i //="Dzien dobry";//Marker otwieraj¹cego komunikatu spo³ecznego
\par 
\par //Klasa wewnêtrzna skupiaj¹ca wspólne w³aœciwoœci WEZLOW z pracownikami (zespo³ów)
\par //////////////////////////////////////////////////////////////////////////////////
\par \i0\cf2\b class\b0\cb3  \cb4 _ZespolRoboczy:\b public\b0\cb3  \cb4 GenerycznyWezelSieci
\par \{
\par \cb3  \cb4\b protected\b0 :
\par \cb3  \cb4\b friend\b0\cb3  \cb4\b class\b0\cb3   \cb4 ProcesProdukcyjny;
\par \cb3  \cb4\b friend\b0\cb3  \cb4\b class\b0\cb3   \cb4 ProcesRaportowany;
\par \cb3  \cb4\b friend\b0\cb3  \cb4\b class\b0\cb3   \cb4 ProcesBadawczy;
\par \cb3  \cb4\b friend\b0\cb3  \cb4\b class\b0\cb3   \cb4 ProcesSpoleczny;
\par \cf0\i //Ile Etatów	Efektywnosc	Aktywnoœæ	Centralnosc	Probiznesowosc	Prolegalnosc	Czasochlonnosc	Innowacyjnoœc	Finans. swobodne	Finanse zaplan	D³ug do nadrz.	Udzial w zysku TT	Eksperckoœæ w dziedzinie	Uwagi
\par \i0\cb3\cf2  \cb4\b unsigned\b0\cb3  \cb4 IleEtatow;\cf0\i //Ile etatów. Co najmniej 1, 0 - "duch" zespo³u - plan utworzenia
\par \i0\cb3\cf2  \cb4\b float\b0\cb3     \cb4 Efektywnosc;\cf0\i //0..2. Czy dzia³a na 50% wydajnoœci czy na 150%. Zale¿y od motywacji
\par \i0\cb3\cf2  \cb4\b float\b0\cb3     \cb4 Doswiadczenie;\cf0\i //POZIOM EKSPERTYZY? Kolejny mno¿nik do liczby etatów
\par \i0\cb3\cf2  \cb4\b float\b0\cb3     \cb4 Centralnosc;\cf0\i //0..1. Jak bardzo wydajnoœæ i ewentualnie aktywnoœæ zale¿y od szefa/szefów
\par 
\par \i0\cb3\cf2  \cb4\b float\b0\cb3     \cb4 Proaktywnosc;\cf0\i //Aktywnoœæ? 0..1. Podtrzymywanie aktywnoœci zewnêtrznej, tworzenie linków  itp.
\par \i0\cb3\cf2  \cb4\b float\b0\cb3     \cb4 Czasochlonnosc;\cf0\i //Jaki jest wspó³czynnik czasoch³onnoœci typowej dzia³alnoœci. Wygenerowania pojedynczego wyniku badañ?
\par \i0\cb3\cf2  \cb4\b float\b0\cb3     \cb4 Prolegalnosc;\cf0\i //????Uczciwoœæ??? Jak ³atwo podj¹æ dzia³ania "szarostrefowe"
\par 
\par \i0\cb3\cf2  \cb4\cf0\i //Procedury podzialu czasu pracy na poszczególne procesy - do wywo³ywania w procedurach ChwilaDlaCiebie()
\par \i0\cb3\cf2  \cb4\b void\b0\cb3      \cb4 _ZarzadcaProcesowLosowy();\cb3  \cb4\cf0\i //Wybiera proces do wykonania losowo anga¿uj¹c siê te¿ losowo
\par \i0\cb3\cf2  \cb4\b void\b0\cb3  	  \cb4 _ZarzadcaProcesowLeniwy();\cb3  \cb4\cf0\i //Robi tylko najpilniejszy proces albo wcale
\par \i0\cb3\cf2  \cb4\b void\b0\cb3  	  \cb4 _ZarzadcaProcesowFantazyjny();\cf0\i //Robi pilny i jak mu coœ zostaje si³ to jeszcze jakiœ
\par \i0\cb3\cf2  \cb4\b void\b0\cb3  	  \cb4 _ZarzadcaProcesowFinezyjny();\cf0\i //Sprytnie dzieli czas ¿eby wszystko szlo do przodu
\par \i0\cb3\cf2  \cb4\b void\b0\cb3  	  \cb4 _ZarzadcaProcesowSprawiedliwy();\cf0\i //Dzieli wszystkie si³y proporcjonalnie do priorytetów procesów
\par \i0\cb3\cf2  \cb4\b public\b0 :
\par \cb3  \cb4\b virtual\b0\cb3  \cb4\b bool\b0\cb3  \cb4 Poprawny();\cf0\i //Sprawdza czy wszystkie wskaŸniki s¹ poprawnie wpisane (nie przypadkowe i nie 0)
\par \i0\cb3\cf2  \cb4\cf0\i //¯eby mogl rozliczac siê finansowo z procesami.
\par \i0\cb3\cf2  \cb4\b virtual\b0\cb3  \cb4\b void\b0\cb3  \cb4 PrzyjmijKase(\b float\b0\cb3  \cb4 Suma)=\cf5 0\cf2 ;\cf0\i //Suma mo¿e byæ ujemna. Mo¿e t¹ kasê "przepuœcic" ale proces jest OK
\par \i0\cb3\cf2  \cb4\b virtual\b0\cb3  \cb4\b bool\b0\cb3  \cb4 StacGoNaWydatek(\b float\b0\cb3  \cb4 Suma)=\cf5 0\cf2 ;\cf0\i //Sprawdza czy taki wydatek jest dopuszczalny
\par \i0\cb3\cf2  \cb4 \};
\par 
\par \cf0\i //Klasa dla badacza, zespo³u badawczego
\par ////////////////////////////////////////////////////////////////////////////////
\par \i0\cf2\b class\b0\cb3  \cb4 JednostkaBadawcza:\b public\b0\cb3  \cb4 _ZespolRoboczy
\par \{
\par \cb3 	\cb4\b friend\b0\cb3  \cb4\b class\b0\cb3  \cb4 ProcesBadawczy;\cb3  \cb4\cf0\i //Musi mieæ dostêp do w³aœciwoœci, w celach kalkulacyjnych
\par \i0\cb3\cf2 	\cb4\cf0\i //Implementacja tego co musi byæ wg. interfejsu typu podstawowego wêz³a
\par \i0\cb3\cf2 	\cb4\b static\b0\cb3  \cb4 KonstruktorElementowModelu<JednostkaBadawcza>\cb3  \cb4 WirtKonstr;
\par \cb3 	\cb4 ElementModelu::WirtualnyKonstruktor*\cb3  \cb4 VKonstruktor()\cb3  \cb4 \{\cb3  \cb4\b return\b0\cb3  \cb4 &WirtKonstr;\}
\par \cb3   \cb4\b public\b0 :
\par \cb3 	\cb4\b void\b0\cb3  \cb4 ChwilaDlaCiebie();\cb3  \cb4\cf0\i //Endogenne zmiany stanów, zarz¹dzanie procesami itp.
\par \i0\cb3\cf2 	\cb4\b void\b0\cb3  \cb4 InterpretujKomunikat(Komunikat*\cb3  \cb4 Co);\cf0\i //Przyjmowanie komunikatów
\par \i0\cb3\cf2 	\cb4 JednostkaBadawcza()\{\}\cf0\i //Konstruktor domyœlny
\par 
\par \i0\cb3\cf2 	\cb4\b bool\b0\cb3  \cb4 ZrobWgListy(\b const\b0\cb3  \cb4 std::string*\cb3  \cb4 Lista,\b unsigned\b0\cb3  \cb4 Ile,\b unsigned\b0 &\cb3  \cb4 Blad);
\par \cb3 	\cb4\b void\b0\cb3  \cb4 AktualizujListeDanych();\cf0\i //Do zapisu i wyœwietlania inspekcyjnego
\par \i0\cb3\cf2 	\cb4\cf0\i //Ruchy na koncie
\par \i0\cb3\cf2 	\cb4\b void\b0\cb3  \cb4 PrzyjmijKase(\b float\b0\cb3  \cb4 Suma)\cb3  \cb4 \{FinanseSwobodne+=Suma;\}\cb3  \cb4\cf0\i //¯eby mogl rozliczac siê finansowo z procesami
\par \i0\cb3\cf2 	\cb4\b bool\b0\cb3  \cb4 StacGoNaWydatek(\b float\b0\cb3  \cb4 Suma)\{\cb3  \cb4\b return\b0\cb3  \cb4 Suma<FinanseSwobodne;\}\cf0\i //Sprawdza czy taki wydatek jest dopuszczalny
\par \i0\cb3\cf2   \cb4\b protected\b0 :\cf0\i //W³aœciwoœci obiektów klasy  i metody pomocnicze
\par \i0\cb3\cf2  \cb4\cf0\i //Cechy:
\par \i0\cb3\cf2  \cb4\cf0\i //////////////////////////////////
\par \i0\cb3\cf2  \cb4\cf0\i // z klasy "ZespolRoboczy":
\par \i0\cb3\cf2  \cb4\cf0\i //Ile Etatów	Efektywnosc	Aktywnoœæ	Centralnosc	Probiznesowosc	Prolegalnosc	Czasochlonnosc	Innowacyjnoœc	Finans. swobodne	Finanse zaplan	D³ug do nadrz.	Udzial w zysku TT	Eksperckoœæ w dziedzinie	Uwagi
\par \i0\cb3\cf2  \cb4\cf0\i // inne - w³asne:
\par //Jedna skala czy dwie Pronaukowosc vs. Probiznesowsc
\par \i0\cb3\cf2  \cb4\b float\b0\cb3     \cb4 Probiznesowosc;\cf0\i //0 - czysta nauka, 0.5-badania patentowalne/licenjonowalne, 1 - czysty biznes - szybkie wdra¿anie
\par \i0\cb3\cf2  \cb4\b float\b0\cb3     \cb4 Innowacyjnosc;\cf0\i //0..1. £atwoœæ startowania projektów bez inspiracji z zewn¹trz, zaciekawienie projektami nieco odleg³ymi od dotychczasowych
\par 
\par \i0\cb3\cf2  \cb4\b float\b0\cb3     \cb4 FinanseSwobodne;\cf0\i //Rezerwy finansowe - w skali roku LUB UPROSZCZONA "ZAMO¯NOŒÆ"
\par \i0\cb3\cf2  \cb4\b float\b0\cb3     \cb4 FinanseObiecane;\cf0\i //Zaplanowane do wydania, ale byæ mo¿e jeszcze nie na koncie (odnawiane/odbierane co 365 kroków)
\par \i0\cb3\cf2  \cb4\b float\b0\cb3  	  \cb4 Dlugi;\cf0\i //Ile zespó³ "wisi" swojemu wydzia³owi/instytutowi. Mo¿liwe tylko chwilowo (30 kroków?)
\par \i0\cb3\cf2  \cb4\b float\b0\cb3     \cb4 UdzialWZysku;\cf0\i //0..1 Jaki procent zysku z innowacji pobiera (reszta idzie dla pracowników)
\par 
\par \i0\cb3\cf2  \cb4\cf0\i //JAK IMPLEMENTOWAÆ MOTYWACJE?????????  --> Zmiany efektywnoœci, ale jaka metoda?
\par \i0\cb3\cf2  \cb4\cf0\i //Projekty z listy aktywnych projektów
\par \i0\cb3\cf2  \cb4\cf0\i //Kontakty z siatki
\par \i0\cb3\cf2  \cb4\cf0\i //Co z kontaktami miêdzynarodowymi?
\par \i0\cb3\cf2  \cb4\cf0\i //po³¹czenie z obiektem gridowym a la rynek?
\par \i0\cf2 \};
\par 
\par \cf0\i //Klasa dla Instytutu, Wydzia³u, Uniwersytetu itp.
\par ////////////////////////////////////////////////////////////////////////////////
\par \i0\cf2\b class\b0\cb3  \cb4 AdministracjaNaukowa:\b public\b0\cb3  \cb4 _ZespolRoboczy
\par \{\cb3   \cb4\cf0\i //Implementacja tego co musi byæ wg. interfejsu typu podstawowego wêz³a
\par \i0\cb3\cf2 	\cb4\b static\b0\cb3  \cb4 KonstruktorElementowModelu<AdministracjaNaukowa>\cb3  \cb4 WirtKonstr;
\par \cb3 	\cb4 ElementModelu::WirtualnyKonstruktor*\cb3  \cb4 VKonstruktor()\cb3  \cb4 \{\cb3  \cb4\b return\b0\cb3  \cb4 &WirtKonstr;\}
\par \cb3   \cb4\b public\b0 :
\par \cb3 	\cb4\b void\b0\cb3  \cb4 ChwilaDlaCiebie();\cb3  \cb4\cf0\i //Endogenne zmiany stanów, zarz¹dzanie procesami itp.
\par \i0\cb3\cf2 	\cb4\b void\b0\cb3  \cb4 InterpretujKomunikat(Komunikat*\cb3  \cb4 Co);\cf0\i //Przyjmowanie komunikatów
\par \i0\cb3\cf2 	\cb4 AdministracjaNaukowa()\{\}\cf0\i //Konstruktor domyslny
\par \i0\cb3\cf2 	\cb4\b bool\b0\cb3  \cb4 ZrobWgListy(\b const\b0\cb3  \cb4 std::string*\cb3  \cb4 Lista,\b unsigned\b0\cb3  \cb4 Ile,\b unsigned\b0 &\cb3  \cb4 Blad);
\par \cb3 	\cb4\b void\b0\cb3  \cb4 AktualizujListeDanych();\cf0\i //Do zapisu i wyœwietlania inspekcyjnego
\par \i0\cb3\cf2 	\cb4\cf0\i //Ruchy na koncie
\par \i0\cb3\cf2 	\cb4\b void\b0\cb3  \cb4 PrzyjmijKase(\b float\b0\cb3  \cb4 Suma)\cb3  \cb4 \{FinanseSwobodne+=Suma;\}\cb3  \cb4\cf0\i //¯eby mogl rozliczac siê finansowo z procesami
\par \i0\cb3\cf2 	\cb4\b bool\b0\cb3  \cb4 StacGoNaWydatek(\b float\b0\cb3  \cb4 Suma)\{\cb3  \cb4\b return\b0\cb3  \cb4 Suma<FinanseSwobodne;\}\cf0\i //Sprawdza czy taki wydatek jest dopuszczalny
\par \i0\cb3\cf2   \cb4\b protected\b0 :\cf0\i //Wlasciwoœci obiektów klasy  i metody pomocnicze
\par \i0\cb3\cf2  \cb4\cf0\i ///////////////////////////////////////////////////////////////////////////////
\par \i0\cb3\cf2  \cb4\cf0\i // z KLASY: ZespolRoboczy
\par \i0\cb3\cf2  \cb4\cf0\i // unsigned  IleEtatow;//Ile etatów. Co najmniej 1, 0 - "duch" zespo³u - plan utworzenia
\par \i0\cb3\cf2  \cb4\cf0\i //float     Efektywnosc;//0..2. Czy dzia³a na 50% wydajnoœci czy na 150%. Zale¿y od motywacji
\par \i0\cb3\cf2  \cb4\cf0\i //float     Proaktywnosc;//(Pro)aktywnoœæ. Prawdopodobieñstwo organizowania konferencji i innych eventów umo¿liwiaj¹cych kontakty miêdzy naukowcami i goœæmi (czyli co ile kroków nastêpuje taki event)
\par \i0\cb3\cf2  \cb4\cf0\i //float     Centralnosc;//0..1. Jak bardzo aktywnoœæ (zewnêtrzna?) zale¿y od szefa/szefów
\par \i0\cb3\cf2  \cb4\cf0\i //float     Doswiadczenie;//POZIOM EKSPERTYZY? Jak tego u¿ywaæ? Mo¿e to samo co efektywnoœæ???
\par \i0\cb3\cf2  \cb4\cf0\i //float     Czasochlonnosc;// Ile czasu (kroków modelu) siê czeka z podjêciem decyzji
\par \i0\cb3\cf2  \cb4\cf0\i //float     Prolegalnosc;//????Elastycznoœæ??? Jak ³atwo podj¹æ dzia³ania obchodz¹ce "bzdurne" przepisy
\par 
\par \i0\cb3\cf2  \cb4\b float\b0\cb3      \cb4 Probiznesowosc;\cf0\i //0...1 Prawdopodobieñstwo podjêcia inicjatyw z wspó³udzia³em biznesu
\par \i0\cb3\cf2  \cb4\b float\b0\cb3      \cb4 ProInwest;\cf0\i //0-1 Sk³onnoœæ inwestowania wolnych œrodków w rozwój zwi¹zany z TT
\par 
\par \i0\cb3\cf2  \cb4\b float\b0\cb3      \cb4 FinanseSwobodne;\cf0\i //Rezerwy finansowe - w skali roku (odnawiane/odbierane co 365 kroków) LUB UPROSZCZONA "ZAMO¯NOŒÆ"
\par \i0\cb3\cf2  \cb4\b float\b0\cb3      \cb4 FinanseObiecane;\cf0\i //Zaplanowane do wydania, ale byæ mo¿e jeszcze nie na koncie
\par \i0\cb3\cf2  \cb4\b float\b0\cb3  	   \cb4 Dlugi;\cf0\i //Ile jednostka ju¿ "wisi". Np. na budowê, albo na pr¹d jak dotacja zaleg³a. Nie mo¿e wiêcej ni¿ urzêdowy limit
\par \i0\cb3\cf2  \cb4\b float\b0\cb3      \cb4 UdzialWZysku;\cf0\i //0..1 Jaki procent zysku z innowacji pobiera (reszta idzie "w dó³" hierarchii)
\par 
\par \i0\cb3\cf2  \cb4\cf0\i //float     UdzialPromo; //0-1 Jakie œrodki s¹ gotowi przeznaczyæ na marketing  (SK¥D JE BIOR¥?)
\par \i0\cb3\cf2  \cb4\cf0\i //float     DecyzjaPatentowa;//Ile czasu  jest podejmowana taka decyzja: wdra¿amy vs. nie interesuje nas to
\par \i0\cf2 \};
\par 
\par \cf0\i //Klasa wykonwacy/producenta ostatecznego produktu
\par ////////////////////////////////////////////////////////////////////////////////
\par \i0\cf2\b class\b0\cb3  \cb4 Firma:\b public\b0\cb3  \cb4 _ZespolRoboczy
\par \{\cb3   \cb4\cf0\i //Implementacja tego co musi byæ wg. interfejsu typu podstawowego wêz³a
\par \i0\cb3\cf2 	\cb4\b static\b0\cb3  \cb4 KonstruktorElementowModelu<Firma>\cb3  \cb4 WirtKonstr;
\par \cb3 	\cb4 ElementModelu::WirtualnyKonstruktor*\cb3  \cb4 VKonstruktor()\cb3  \cb4 \{\cb3  \cb4\b return\b0\cb3  \cb4 &WirtKonstr;\}
\par \cb3   \cb4\b public\b0 :
\par \cb3 	\cb4\b void\b0\cb3  \cb4 ChwilaDlaCiebie();\cb3  \cb4\cf0\i //Endogenne zmiany stanów, zarz¹dzanie procesami itp.
\par \i0\cb3\cf2 	\cb4\b void\b0\cb3  \cb4 InterpretujKomunikat(Komunikat*\cb3  \cb4 Co);\cf0\i //Przyjmowanie komunikatów
\par \i0\cb3\cf2 	\cb4 Firma()\{\}\cf0\i //Konstruktor domyslny
\par \i0\cb3\cf2 	\cb4\b bool\b0\cb3  \cb4 ZrobWgListy(\b const\b0\cb3  \cb4 std::string*\cb3  \cb4 Lista,\b unsigned\b0\cb3  \cb4 Ile,\b unsigned\b0 &\cb3  \cb4 Blad);
\par \cb3 	\cb4\b void\b0\cb3  \cb4 AktualizujListeDanych();\cf0\i //Do zapisu i wyœwietlania inspekcyjnego
\par \i0\cb3\cf2 	\cb4\cf0\i //Ruchy na koncie
\par \i0\cb3\cf2 	\cb4\b void\b0\cb3  \cb4 PrzyjmijKase(\b float\b0\cb3  \cb4 Suma)\cb3  \cb4 \{FinanseBiezace+=Suma;\}\cb3  \cb4\cf0\i //¯eby mogl rozliczac siê finansowo z procesami
\par \i0\cb3\cf2 	\cb4\b bool\b0\cb3  \cb4 StacGoNaWydatek(\b float\b0\cb3  \cb4 Suma)\{\cb3  \cb4\b return\b0\cb3  \cb4 Suma<FinanseBiezace;\}\cf0\i //Sprawdza czy taki wydatek jest dopuszczalny
\par \i0\cb3\cf2   \cb4\b protected\b0 :\cf0\i //Wlasciwoœci obiektów klasy i metody pomocnicze
\par \i0\cb3\cf2  \cb4\cf0\i //////////////////////////////////////////////////////////////////////////////////////
\par \i0\cb3\cf2   \cb4\b void\b0\cb3  \cb4 _RozeslijNaleznosci(DziedzinaWKolorze\cb3  \cb4 Produkt,\b float\b0 &\cb3  \cb4 wplyw);\cb3  \cb4\cf0\i //Wg. identyfikatora produktu szuka komu winien dywidende
\par \i0\cb3\cf2  \cb4\cf0\i //Z KLASY: ZespolRoboczy
\par \i0\cb3\cf2  \cb4\cf0\i // unsigned IleEtatow;//Ile etatów. Co najmniej 1, 0 - "duch" zespo³u - plan utworzenia
\par \i0\cb3\cf2  \cb4\cf0\i //float    Efektywnosc;//0..2. Czy dzia³a na 50% wydajnoœci czy na 150%. Zale¿y od motywacji
\par \i0\cb3\cf2  \cb4\cf0\i //float    Proaktywnosc; //Aktywnoœæ. 0-1 aktywnoœæ w tworzenia nowych znajomoœci biznesowych
\par \i0\cb3\cf2  \cb4\cf0\i //float    Centralnosc;//0..1. Jak bardzo aktywnoœæ (zewnêtrzna?) zale¿y od szefa/szefów
\par \i0\cb3\cf2  \cb4\cf0\i //float    Doswiadczenie;//POZIOM EKSPERTYZY? Jak tego u¿ywaæ? Mo¿e to samo co efektywnoœæ???
\par \i0\cb3\cf2  \cb4\cf0\i //float    Czasochlonnosc;//Jaki jest wspó³czynnik czasoch³onnoœci typowej dzia³alnoœci (np. przygotowanie projektu oraz produktu)
\par \i0\cb3\cf2  \cb4\cf0\i //float    Prolegalnosc;//?"Pragmatycznoœæ"? Jak ³atwo podj¹æ dzia³ania "szarostrefowe" i omijac "nie¿yciowe" przepisy
\par 
\par \i0\cb3\cf2  \cb4\b float\b0\cb3     \cb4 ProAkademickosc;\cb3  \cb4\cf0\i //0-1 chêæ nawi¹zywania kontaktów z badaczami i uniwersytetami
\par \i0\cb3\cf2  \cb4\b float\b0\cb3     \cb4 ProInnowac;\cf0\i //Stosunek do nowoœci: 0-1 - 0..33% niewiele robi, 33-66% raczej blokuje innych,
\par \i0\cb3\cf2 					\cb4\cf0\i //powy¿ej - próbuje, wchodz¹c na coraz wczeœniejszym etapie (prawdopodobienstwo)
\par 
\par \i0\cb3\cf2  \cb4\b float\b0\cb3     \cb4 FinanseBiezace;\cb3  \cb4\cf0\i //Ile firma ma kasy aktualnie LUB UPROSZCZONA "ZAMO¯NOŒÆ"
\par \i0\cb3\cf2  \cb4\b float\b0\cb3     \cb4 FinanseZaplanowane;\cf0\i //Ile firma ma obiecanych œrodków kredytowych
\par \i0\cb3\cf2  \cb4\b float\b0\cb3  	  \cb4 Dlugi;\cf0\i //Ile firma ma do sp³aty. Im wiêcej tym mniejsza szansa ¿e coœ dostanie nowego
\par \i0\cb3\cf2  \cb4\b float\b0\cb3  	  \cb4 LimitUdzialuInwestTT;\cb3  \cb4\cf0\i //0-1 Jakie œrodki finansowe z zarobionych gotów przeznaczyæ na inwestycje TT
\par 
\par \i0\cb3\cf2  \cb4\cf0\i //float 	  UdzialPromo; //0-1 Jakie œrodki sa gotowi przeznaczyæ na marketing
\par \i0\cb3\cf2  \cb4\cf0\i //float Budzet
\par \i0\cb3\cf2  \cb4\cf0\i //float Wiarygodnosc;//Cecha po³¹czenia? //0-1 na ile dana firma jest atrakcyjna
\par \i0\cb3\cf2 			\cb4\cf0\i //dla uniwersytetu oraz banków w kontekœcie podejmowania z ni¹ wspó³pracy
\par \i0\cb3\cf2  \cb4\cf0\i //???float Wspolpraca_Konkurenci; //chêæ podejmowania wspó³pracy z innymi firmami 0-1
\par \i0\cb3\cf2  \cb4\cf0\i //(te dwie zmienne powinny byæ od siebie niezale¿ne, relacja o sumie niezerowej
\par \i0\cb3\cf2  \cb4\cf0\i //...
\par \i0\cf2 \};
\par 
\par \cf0\i //Klasa organizatora wdrozenia innowacji (BOTT i UOTT)
\par ////////////////////////////////////////////////////////////////////////////////
\par /*
\par class OrganizatorWdrozenia:public GenerycznyWezelSieci
\par \{
\par   //DYLEMAT - CZY TO JEDEN TYP Z "SUWAKAMI" POZWALAJ¥CYMI ZMIENIÆ UOTT w niemal BOTT
\par   //czy dwa zupe³nie ró¿ne typy?
\par   //Ostatecznie przyjêto ¿e:
\par   //Czy BOTT=firma+OTT a UOTT=AdmNaukowa+OTT
\par \};
\par */
\par 
\par \i0\cf2\b class\b0\cb3  \cb4 BOTT:\b public\b0\cb3  \cb4 Firma
\par \{\cb3   \cb4\cf0\i //Implementacja tego co musi byæ wg. interfejsu typu podstawowego wêz³a
\par \i0\cb3\cf2 	\cb4\b static\b0\cb3  \cb4 KonstruktorElementowModelu<BOTT>\cb3  \cb4 WirtKonstr;
\par \cb3 	\cb4 ElementModelu::WirtualnyKonstruktor*\cb3  \cb4 VKonstruktor()\cb3  \cb4 \{\cb3  \cb4\b return\b0\cb3  \cb4 &WirtKonstr;\}
\par \cb3   \cb4\b public\b0 :
\par \cb3 	\cb4\b void\b0\cb3  \cb4 ChwilaDlaCiebie();\cb3  \cb4\cf0\i //Endogenne zmiany stanów, zarz¹dzanie procesami itp.
\par \i0\cb3\cf2 	\cb4\b void\b0\cb3  \cb4 InterpretujKomunikat(Komunikat*\cb3  \cb4 Co);\cf0\i //Przyjmowanie komunikatów
\par \i0\cb3\cf2 	\cb4 BOTT()\{\}\cf0\i //Konstruktor domyslny
\par \i0\cb3\cf2 	\cb4\b bool\b0\cb3  \cb4 ZrobWgListy(\b const\b0\cb3  \cb4 std::string*\cb3  \cb4 Lista,\b unsigned\b0\cb3  \cb4 Ile,\b unsigned\b0 &\cb3  \cb4 Blad);
\par \cb3   \cb4\b protected\b0 :\cf0\i //Wlasciwoœci obiektów klasy i metody pomocnicze
\par \i0\cb3\cf2   \cb4\cf0\i //////////////////////////////////////////////////////////////////////////////
\par \i0\cb3\cf2   \cb4\cf0\i //Ile Etatów	Efektywnosc	Aktywnoœæ	Centralnosc	Pronaukowosc	Prolegalnosc	Czasochlonnosc	Proinnowacyjnosc	Finans. bie¿¹ce	Finanse zaplan	D³ugi	Limit ryzyk. TT	EksperckoscTT	Uwagi
\par \i0\cb3\cf2   \cb4\cf0\i //float 	  LimitUdzialuInwestTT; //0-1 Jakie œrodki finansowe na RYZYKOWNE inwestycje TT
\par \i0\cb3\cf2   \cb4\cf0\i // float EksperckoscTT;=DOSWIADCZENIE//Dodatkowy wspó³czynnik 0..2 skutecznoœci TT wynikaj¹cy z doœwiadczenia
\par \i0\cb3\cf2   \cb4\cf0\i // float AktywnoscInform;//Aktywne poszukiwanie informacji "bazodanowej" (rynek, bazy, patenty etc)
\par \i0\cb3\cf2    \cb4\cf0\i // ... po prostu 0.5 normalnej aktywnoœci???
\par \i0\cb3\cf2  \cb4\cf0\i //Kontakty z siatki
\par \i0\cb3\cf2  \cb4\cf0\i //Projekty z listy aktywnych projektów
\par \i0\cb3\cf2  \cb4\cf0\i //Nowe znajomoœci przez polecenie, konferencje, poszukiwanie/nawi¹zywanie kontaktów
\par \i0\cb3\cf2  \cb4\cf0\i //Ocena projektu?  bezpoœrednia i poœrednia
\par \i0\cf2 \};
\par 
\par \b class\b0\cb3  \cb4 UOTT:\b public\b0\cb3  \cb4 AdministracjaNaukowa
\par \{\cb3   \cb4\cf0\i //Implementacja tego co musi byæ wg. interfejsu typu podstawowego wêz³a
\par \i0\cb3\cf2 	\cb4\b static\b0\cb3  \cb4 KonstruktorElementowModelu<UOTT>\cb3  \cb4 WirtKonstr;
\par \cb3 	\cb4 ElementModelu::WirtualnyKonstruktor*\cb3  \cb4 VKonstruktor()\cb3  \cb4 \{\cb3  \cb4\b return\b0\cb3  \cb4 &WirtKonstr;\}
\par \cb3   \cb4\b public\b0 :
\par \cb3 	\cb4\b void\b0\cb3  \cb4 ChwilaDlaCiebie();\cb3  \cb4\cf0\i //Endogenne zmiany stanów, zarz¹dzanie procesami itp.
\par \i0\cb3\cf2 	\cb4\b void\b0\cb3  \cb4 InterpretujKomunikat(Komunikat*\cb3  \cb4 Co);\cf0\i //Przyjmowanie komunikatów
\par \i0\cb3\cf2 	\cb4 UOTT()\{\}\cf0\i //Konstruktor domyslny
\par \i0\cb3\cf2 	\cb4\b bool\b0\cb3  \cb4 ZrobWgListy(\b const\b0\cb3  \cb4 std::string*\cb3  \cb4 Lista,\b unsigned\b0\cb3  \cb4 Ile,\b unsigned\b0 &\cb3  \cb4 Blad);
\par \cb3   \cb4\b protected\b0 :\cf0\i //Wlasciwoœci obiektów klasy i metody pomocnicze
\par \i0\cb3\cf2   \cb4\cf0\i //////////////////////////////////////////////////////////////////////////////
\par \i0\cb3\cf2   \cb4\cf0\i //Ile Etatów	Efektywnosc	Aktywnoœæ	Centralnosc	Probiznesowosc	Prolegalnosc	Czasochlonnosc	ProTT	Finans. swobodne	Finanse zaplan	D³ug do nadrz.	Udzial w zysku TT	EksperckoscTT	Uwagi
\par \i0\cb3\cf2    \cb4\cf0\i //float    UdzialWZysku;//0..1 Jaki procent zysku z innowacji pobiera i przekszta³ca w motywacjê pracowników
\par \i0\cb3\cf2    \cb4\cf0\i //float EksperckoscTT;==Doswiadczenie//0..2 wspó³czynnik skutecznoœci TT wynikaj¹cy z doœwiadczenia
\par \i0\cb3\cf2    \cb4\cf0\i //float AktywnoscInform;//Aktywne poszukiwanie informacji "bazodanowej" (rynek, bazy, patenty etc)
\par \i0\cb3\cf2    \cb4\cf0\i // ... po prostu 0.5 normalnej aktywnoœci???
\par \i0\cb3\cf2  \cb4\cf0\i //Kontakty z siatki
\par \i0\cb3\cf2  \cb4\cf0\i //Projekty z listy aktywnych projektów
\par \i0\cb3\cf2  \cb4\cf0\i //Ocena projektu??? - poœrednia przez wewn¹trz uczelnianych ekspertów lub zewnêtrzne firmy
\par \i0\cb3\cf2  \cb4\cf0\i //Trwa to d³u¿ej
\par \i0\cf2 \};
\par 
\par 
\par \cf0\i //Klasa powi¹zania administracyjnego - przepuszcza w górê raporty,
\par // a w dó³ wytyczne oraz pieni¹dze
\par ////////////////////////////////////////////////////////////////////////////////
\par \i0\cf2\b class\b0\cb3  \cb4 PodlegloscOrganizacyjna:\b public\b0\cb3  \cb4 GenerycznePowiazanie
\par \{\cb3   \cb4\cf0\i //Implementacja tego co musi byæ wg. interfejsu typu podstawowego linku
\par \i0\cb3\cf2 	\cb4\b static\b0\cb3  \cb4 KonstruktorElementowModelu<PodlegloscOrganizacyjna>\cb3  \cb4 WirtKonstr;
\par \cb3 	\cb4\cf0\i //Dla usprawnienia klasa potomna mo¿e zwracaæ adres swojego wirtualnego konstruktora
\par \i0\cb3\cf2 	\cb4\cf0\i //Choæ mo¿na te¿ nie definiowaæ  i polegac na gorszej funkcji z klasy bazowej
\par \i0\cb3\cf2 	\cb4 ElementModelu::WirtualnyKonstruktor*\cb3  \cb4 VKonstruktor()\cb3  \cb4 \{\cb3  \cb4\b return\b0\cb3  \cb4 &WirtKonstr;\}
\par \cb3   \cb4\b public\b0 :
\par \cb3 	\cb4\cf0\i //void ChwilaDlaCiebie(); //Endogenne zmiany stanów linku - tu brak ...
\par \i0\cb3\cf2 	\cb4\b bool\b0\cb3   \cb4 Kierunkowy()\cb3  \cb4 \{\cb3  \cb4\b return\b0\cb3  \cb4\b true\b0 ;\}\cb3   \cb4\cf0\i //Wizualnie zachowuje siê jak kierunkowy
\par \i0\cb3\cf2 	\cb4\b bool\b0\cb3   \cb4 Akceptacja(Komunikat*\cb3  \cb4 Co);\cf0\i //Ale selekcja komunikatów jest z³o¿ona - mog¹ iœæ pod pr¹d
\par \i0\cb3\cf2 	\cb4 PodlegloscOrganizacyjna()\{\}\cf0\i //Konstruktor domyslny
\par 
\par \i0\cb3\cf2 	\cb4\b bool\b0\cb3  \cb4 ZrobWgListy(\b const\b0\cb3  \cb4 std::string*\cb3  \cb4 Lista,\b unsigned\b0\cb3  \cb4 Ile,\b unsigned\b0 &\cb3  \cb4 Blad);
\par \cb3   \cb4\b protected\b0 :\cf0\i //W³aœciwoœci obiektów klasy  i metody pomocnicze
\par \i0\cb3\cf2   \cb4\cf0\i //... ???
\par \i0\cf2 \};
\par 
\par 
\par \cf0\i // Klasa kooperacji sformalizowanej - przepuszcza w raporty - efekty dzia³añ
\par // oraz pieni¹dze
\par ////////////////////////////////////////////////////////////////////////////////
\par \i0\cf2\b class\b0\cb3  \cb4 FormalnaKooperacja:\b public\b0\cb3  \cb4 PowiazaniePaboliczne
\par \{\cb3   \cb4\cf0\i //Implementacja tego co musi byæ wg. interfejsu typu podstawowego linku
\par \i0\cb3\cf2 	\cb4\b friend\b0\cb3  \cb4\b class\b0\cb3  \cb4 KonstruktorElementowModelu<FormalnaKooperacja>;
\par \cb3 	\cb4\b static\b0\cb3  \cb4 KonstruktorElementowModelu<FormalnaKooperacja>\cb3  \cb4 WirtKonstr;
\par \cb3 	\cb4 ElementModelu::WirtualnyKonstruktor*\cb3  \cb4 VKonstruktor()\cb3  \cb4 \{\cb3  \cb4\b return\b0\cb3  \cb4 &WirtKonstr;\}
\par \cb3   \cb4\b public\b0 :
\par \cb3 	\cb4 FormalnaKooperacja(\b unsigned\b0\cb3  \cb4 Inicjator,\b unsigned\b0\cb3  \cb4 Kooperator,\b float\b0\cb3  \cb4 Waga,\b float\b0\cb3  \cb4 Udzial=\cf5 1\cf2 ,\b unsigned\b0\cb3  \cb4 Termin=(\cf5 10\cf2 *\cf5 365\cf2 ));\cf0\i //Konstruktor domyœlny
\par \i0\cb3\cf2 	\cb4\b void\b0\cb3  \cb4 ChwilaDlaCiebie();\cb3  \cb4\cf0\i //Jak "Wykonany" to z czasem siê coraz bardziej wygina, a jak termi spadnie do 0 to znika
\par \i0\cb3\cf2 	\cb4\b bool\b0\cb3   \cb4 Akceptacja(Komunikat*\cb3  \cb4 Co);\cf0\i //Selekcja komunikatów
\par \i0\cb3\cf2 	\cb4\b bool\b0\cb3   \cb4 Poprawny();\cf0\i //Jak po terminie to znika
\par \i0\cb3\cf2 	\cb4\b bool\b0\cb3  \cb4 ZrobWgListy(\b const\b0\cb3  \cb4 std::string*\cb3  \cb4 Lista,\b unsigned\b0\cb3  \cb4 Ile,\b unsigned\b0 &\cb3  \cb4 Blad);
\par \cb3 	\cb4\b void\b0\cb3  \cb4 Narysuj();\cf0\i //Przechwycenie rysowania dla debugingu
\par \i0\cb3\cf2 	\cb4\cf0\i //Akcesory
\par \i0\cb3\cf2 	\cb4\b unsigned\b0\cb3  \cb4 DajTermin()\{\cb3  \cb4\b return\b0\cb3  \cb4 Termin;\}\cf0\i //Dostep do terminu
\par \i0\cb3\cf2 	\cb4\b void\b0\cb3      \cb4 UstawTermin(\b unsigned\b0\cb3  \cb4 NowyTermin)\{Termin\cb3  \cb4 =\cb3  \cb4 NowyTermin;\}
\par \cb3 	\cb4\b bool\b0\cb3      \cb4 CzyWykonany()\{\cb3  \cb4\b return\b0\cb3  \cb4 Wykonany;\}
\par \cb3 	\cb4\b void\b0\cb3      \cb4 UstawWykonano(\b bool\b0\cb3  \cb4 TakNie=\b true\b0 )\{Wykonany=TakNie;\cb3   \cb4 \}
\par \cb3 	\cb4\b float\b0\cb3  	 \cb4 JakiUdzial()\{\cb3  \cb4\b if\b0 (Waga<\cf5 1\cf2 )\cb3  \cb4\b return\b0\cb3  \cb4 Waga;\cb3  \cb4\b else\b0\cb3  \cb4\b return\b0\cb3  \cb4\cf5 1\cf2 ;\}\cb3  \cb4\cf0\i //Waga linku kooperacyjnego jest mierzona udzialem w zyskach!!!
\par \i0\cb3\cf2 	\cb4\cf0\i //W³aœciwoœci obiektów klasy  i metody pomocnicze
\par \i0\cb3\cf2   \cb4\b protected\b0 :
\par \cb3    \cb4 FormalnaKooperacja()\{Wykonany=\cf5 0\cf2 ;Termin=(\cf5 10\cf2 *\cf5 365\cf2 );\}\cf0\i //Konstruktor domyœlny
\par \i0\cb3\cf2    \cb4\b bool\b0\cb3    \cb4 Wykonany;\cf0\i //Czy ju¿ zosta³ zrealizowany i tylko p³yn¹ dywidendy
\par \i0\cb3\cf2    \cb4\b int\b0\cb3     \cb4 Termin;\cf0\i //Maleje z ka¿dym krokiem i jak 0 to link znika - koniec umowy
\par \i0\cf2 \};
\par 
\par 
\par \cf0\i //Klasa powi¹zania towarzyskiego, zanikaj¹cego powoli gdy nie u¿ywany
\par // ASYMETRYCZNA - TAKIE LINKI S¥ POD DWA BO ZAUFANIE I WAGA POWI¥ZANIA
\par // ZAZWYCZAJ JEST RÓ¯NA Z PUNKTU WIDZENIA OBU PARTNERÓW!
\par //Komentarz na temat negatywnoœci (do rozwa¿enia) - hamuj¹ca rola wêz³a w przekazie
\par //informacji. Jak nie lubiê bo zazdroszczê, to mu nie powiem,
\par //chocia¿ jesteœmy powi¹zani.
\par ////////////////////////////////////////////////////////////////////////////////
\par \i0\cf2\b class\b0\cb3  \cb4 KontaktTowarzyski:\b public\b0\cb3  \cb4 PowiazaniePaboliczneSkierowane
\par \{\cb3   \cb4\cf0\i //Implementacja tego co musi byæ wg. interfejsu typu podstawowego linku
\par \i0\cb3\cf2 	\cb4\b static\b0\cb3  \cb4 KonstruktorElementowModelu<KontaktTowarzyski>\cb3  \cb4 WirtKonstr;
\par \cb3 	\cb4 ElementModelu::WirtualnyKonstruktor*\cb3  \cb4 VKonstruktor()\cb3  \cb4 \{\cb3  \cb4\b return\b0\cb3  \cb4 &WirtKonstr;\}
\par \cb3   \cb4\b public\b0 :
\par \cb3 	\cb4\b void\b0\cb3  \cb4 ChwilaDlaCiebie();\cb3  \cb4\cf0\i //Endogenne zmiany stanów linku - zanikanie...
\par \i0\cb3\cf2 	\cb4\b bool\b0\cb3  \cb4 Poprawny();\cb3  \cb4\cf0\i //true jeœli jest dobrze zdefiniowany. Wci¹¿ istniej¹ oba konce itp.
\par \i0\cb3\cf2 					\cb4\cf0\i // i WAGA jest wiêksza ni¿ TOWARZYSKA_NAJMNIEJSZA_WAGA
\par \i0\cb3\cf2 	\cb4\b bool\b0\cb3   \cb4 Akceptacja(Komunikat*\cb3  \cb4 Co);\cf0\i //Selekcja komunikatów - podstawowa i wzrost wagi
\par \i0\cb3\cf2 	\cb4 KontaktTowarzyski()\{\}\cf0\i //Konstruktor domyslny
\par \i0\cb3\cf2 	\cb4 KontaktTowarzyski(\b unsigned\b0\cb3  \cb4 Kogo,\b unsigned\b0\cb3  \cb4 ZKim,\b double\b0\cb3  \cb4 JakaWaga,\b double\b0\cb3  \cb4 JakieWygiecie);
\par \cb3 	\cb4\b bool\b0\cb3  \cb4 ZrobWgListy(\b const\b0\cb3  \cb4 std::string*\cb3  \cb4 Lista,\b unsigned\b0\cb3  \cb4 Ile,\b unsigned\b0 &\cb3  \cb4 Blad);
\par \cb3 	\cb4\cf0\i //Specjalne dla tego typu
\par \i0\cb3\cf2 	\cb4\b void\b0\cb3  \cb4 ZmienWage(\b double\b0\cb3  \cb4 mnoznik);\cf0\i //Zmienia bezpiecznie wagê powiazania. "mnoznik" mo¿e byæ wiêkszy lub mniejszy ni¿ 1
\par \i0\cb3\cf2   \cb4\b protected\b0 :\cf0\i //Wlasciwoœci obiektów klasy  i metody pomocnicze
\par \i0\cb3\cf2 	\cb4\cf0\i //float Zaufanie == Waga linku . Dlatego skierowany bo zaufanie mo¿e byæ asymetryczne
\par \i0\cb3\cf2 	\cb4\cf0\i //float TempoZanikania; //Czasem szybkie, czasem wolne, ró¿ne dla ró¿nych osób
\par \i0\cb3\cf2 	\cb4\cf0\i //Parametr wygiêcia linku jest te¿ skorelowane z tempem "parowania" nieu¿ywanego
\par \i0\cb3\cf2 	\cb4\cf0\i //linku socjalnego - im bardziej "poboczny" czyli wygiêty link tym szybciej zanika
\par \i0\cf2 \};
\par 
\par 
\par \cf0\i //Klasa komunikatu oficjalnego - raporty (w górê), wytyczne w dó³ (podleglosci  adm.)
\par ////////////////////////////////////////////////////////////////////////////////
\par \i0\cf2\b class\b0\cb3  \cb4 KomunikacjaTowarzyska:\b public\b0\cb3  \cb4 GeneryczneInfo
\par \{\cb3   \cb4\cf0\i //Implementacja tego co musi byæ wg. interfejsu typu podstawowego linku
\par \i0\cb3\cf2 	\cb4\b friend\b0\cb3  \cb4\b class\b0\cb3  \cb4 KonstruktorElementowModelu<KomunikacjaTowarzyska>;
\par \cb3 	\cb4\b static\b0\cb3  \cb4 KonstruktorElementowModelu<KomunikacjaTowarzyska>\cb3  \cb4 WirtKonstr;
\par \cb3 	\cb4 ElementModelu::WirtualnyKonstruktor*\cb3  \cb4 VKonstruktor()\cb3  \cb4 \{\cb3  \cb4\b return\b0\cb3  \cb4 &WirtKonstr;\}
\par \cb3   \cb4\b public\b0 :
\par \cb3 	\cb4 Komunikat*\cb3  \cb4 Klonuj();\cb3  \cb4\cf0\i //Robi na stercie kopie komunikatu do przechowania lub wstawienia
\par \i0\cb3\cf2 	\cb4\cf0\i //Domyslny konstruktor wymaga kategori i opcjonalnie numeru wezla o którym mowa
\par \i0\cb3\cf2 	\cb4 KomunikacjaTowarzyska(\b const\b0\cb3  \cb4\b char\b0 *\cb3  \cb4 Rodzaj,\b unsigned\b0\cb3  \cb4 OKogoChodzi=-\cf5 1\cf2 );
\par \cb3 	\cb4\b const\b0\cb3  \cb4 string&\cb3  \cb4 Rodzaj();\cf0\i //Gdzieœ w danych jest rodzaj tego komunikatu
\par \i0\cb3\cf2 	\cb4\b unsigned\b0 &\cb3      \cb4 OKimTaGadka()\cb3  \cb4 \{\b return\b0\cb3  \cb4 OKim;\}\cb3   \cb4\cf0\i //Na temat kogo jest ten komunikat - mo¿e o nadawcy, a mo¿e nie!
\par 
\par \i0\cb3\cf2 	\cb4\b bool\b0\cb3  \cb4 Zwrotnie(\b float\b0\cb3  \cb4 Szybkosc=\cf5 0\cf2 );\cf0\i //Zwrotne adresowanie sluzy do pogrubiania linku na którego kom. odpowiadamy
\par \i0\cb3\cf2 	\cb4\b bool\b0\cb3  \cb4 ZrobWgListy(\b const\b0\cb3  \cb4 std::string*\cb3  \cb4 Lista,\b unsigned\b0\cb3  \cb4 Ile,\b unsigned\b0 &\cb3  \cb4 Blad);\cb3  \cb4\cf0\i //Jak generyczny
\par 
\par \i0\cb3\cf2   \cb4\b protected\b0 :\cf0\i //Wlasciwoœci obiektów klasy  i metody pomocnicze
\par \i0\cb3\cf2 	\cb4\b void\b0\cb3  \cb4 RysujKsztalt(\b float\b0\cb3  \cb4 X,\b float\b0\cb3  \cb4 Y,\b float\b0\cb3  \cb4 Rad,\b unsigned\b0\cb3  \cb4 R,\b unsigned\b0\cb3  \cb4 G,\b unsigned\b0\cb3  \cb4 B);\cb3  \cb4\cf0\i //Rysowanie kszta³tu zale¿nego od typu potomnego,
\par \i0\cb3\cf2 	\cb4\b unsigned\b0\cb3  \cb4 OKim;
\par \cb3 	\cb4 KomunikacjaTowarzyska()\{OKim=-\cf5 1\cf2 ;\}\cf0\i //Konstruktor domyœlny - nie wiadomo o kim mowa
\par \i0\cb3\cf2 	\cb4 KomunikacjaTowarzyska(\b const\b0\cb3  \cb4 KomunikacjaTowarzyska*\cb3  \cb4 Wzor):GeneryczneInfo(Wzor)
\par \cb3 		\cb4 \{OKim=Wzor->OKim;\}\cf0\i //KONSTRUKTOR KOPIUJ¥CY przenosi te¿ numer "obgadywanego" wêz³¹
\par 
\par \i0\cf2 \};
\par 
\par \cf0\i //Klasa komunikatu oficjalnego - raporty (w górê), wytyczne w dó³ (podleglosci  adm.)
\par ////////////////////////////////////////////////////////////////////////////////
\par \i0\cf2\b class\b0\cb3  \cb4 KomunikacjaOficjalna:\b public\b0\cb3  \cb4 GeneryczneInfo
\par \{\cb3   \cb4\cf0\i //Implementacja tego co musi byæ wg. interfejsu typu podstawowego linku
\par \i0\cb3\cf2 	\cb4\b friend\b0\cb3  \cb4\b class\b0\cb3  \cb4 KonstruktorElementowModelu<KomunikacjaOficjalna>;
\par \cb3 	\cb4\b static\b0\cb3  \cb4 KonstruktorElementowModelu<KomunikacjaOficjalna>\cb3  \cb4 WirtKonstr;
\par \cb3 	\cb4 ElementModelu::WirtualnyKonstruktor*\cb3  \cb4 VKonstruktor()\cb3  \cb4 \{\cb3  \cb4\b return\b0\cb3  \cb4 &WirtKonstr;\}
\par \cb3   \cb4\b public\b0 :
\par \cb3 	\cb4 Komunikat*\cb3  \cb4 Klonuj();\cb3  \cb4\cf0\i //Robi na stercie kopie komunikatu do przechowania lub wstawienia
\par \i0\cb3\cf2 	\cb4 KomunikacjaOficjalna(\b const\b0\cb3  \cb4\b char\b0 *\cb3  \cb4 Rodzaj,\b unsigned\b0\cb3  \cb4 Autor);\cf0\i //Konstruktor z ustalonym rodzajem komunikatu
\par \i0\cb3\cf2 	\cb4\b const\b0\cb3  \cb4 string&\cb3  \cb4 Rodzaj();\cf0\i //Gdzieœ w danych jest rodzaj tego komunikatu
\par \i0\cb3\cf2 	\cb4\b unsigned\b0\cb3 	\cb4 KtoJestAutorem()\{\cb3  \cb4\b return\b0\cb3  \cb4 Autor;\}
\par 
\par \cb3 	\cb4\b bool\b0\cb3  \cb4 ZrobWgListy(\b const\b0\cb3  \cb4 std::string*\cb3  \cb4 Lista,\b unsigned\b0\cb3  \cb4 Ile,\b unsigned\b0 &\cb3  \cb4 Blad);
\par 
\par \cb3   \cb4\b protected\b0 :\cf0\i //Wlasciwoœci obiektów klasy  i metody pomocnicze
\par \i0\cb3\cf2 	\cb4\b void\b0\cb3  \cb4 RysujKsztalt(\b float\b0\cb3  \cb4 X,\b float\b0\cb3  \cb4 Y,\b float\b0\cb3  \cb4 Rad,\b unsigned\b0\cb3  \cb4 R,\b unsigned\b0\cb3  \cb4 G,\b unsigned\b0\cb3  \cb4 B);\cb3  \cb4\cf0\i //Rysowanie kszta³tu zale¿nego od typu potomnego,
\par \i0\cb3\cf2 	\cb4 KomunikacjaOficjalna()\{Autor=-\cf5 1\cf2 ;\}\cf0\i //Konstruktor domyœlny ukryty, ¿eby byle kto go nie u¿ywa³ :-)
\par \i0\cb3\cf2 	\cb4 KomunikacjaOficjalna(\b const\b0\cb3  \cb4 KomunikacjaOficjalna*\cb3  \cb4 Wzor):GeneryczneInfo(Wzor)\cb3  \cb4\cf0\i //KONSTRUKTOR KOPIUJ¥CY
\par \i0\cb3\cf2 						\cb4 \{Autor=Wzor->Autor;\}
\par \cb3    \cb4\cf0\i //POLE:
\par \i0\cb3\cf2    \cb4\b unsigned\b0\cb3  \cb4 Autor;\cb3  \cb4\cf0\i //Kto jest autorem
\par \i0\cb3\cf2   \cb4\cf0\i //JAKIE RODZAJE:
\par \i0\cb3\cf2   \cb4\cf0\i //wytyczne w dó³, raporty w górê,
\par \i0\cb3\cf2   \cb4\cf0\i //proœba o konsultacje prawn¹, o zgodê na kontakt/wspolprace
\par \i0\cb3\cf2   \cb4\cf0\i //odpowiedzi na to...
\par \i0\cb3\cf2   \cb4\cf0\i //...CO JESZCZE???
\par \i0\cf2 \};
\par 
\par \cf0\i //Klasa komunikatu-pakietu do przesy³ania realnych produktów z badañ lub fabryk
\par // potrzebna g³ówne ze wzglêdu na odróznienie wizualizacyjne
\par ////////////////////////////////////////////////////////////////////////////////
\par \i0\cf2\b class\b0\cb3  \cb4 PaczkaProduktow:\b public\b0\cb3  \cb4 GeneryczneInfo
\par \{\cb3   \cb4\cf0\i //Implementacja tego co musi byæ wg. interfejsu typu podstawowego linku
\par \i0\cb3\cf2 	\cb4\b friend\b0\cb3  \cb4\b class\b0\cb3  \cb4 KonstruktorElementowModelu<PaczkaProduktow>;
\par \cb3 	\cb4\b static\b0\cb3  \cb4 KonstruktorElementowModelu<PaczkaProduktow>\cb3  \cb4 WirtKonstr;
\par \cb3 	\cb4 ElementModelu::WirtualnyKonstruktor*\cb3  \cb4 VKonstruktor()\cb3  \cb4 \{\cb3  \cb4\b return\b0\cb3  \cb4 &WirtKonstr;\}
\par \cb3   \cb4\b public\b0 :
\par \cb3 	\cb4\b friend\b0\cb3  \cb4\b class\b0\cb3  \cb4 ProcesProdukcyjny;\cb3  \cb4\cf0\i //Chyba musi miec dostêp do wnêtrza paczki
\par \i0\cb3\cf2 	\cb4 Komunikat*\cb3  \cb4 Klonuj();\cb3  \cb4\cf0\i //Robi na stercie kopie komunikatu do przechowania lub wstawienia
\par \i0\cb3\cf2 	\cb4 PaczkaProduktow(\b const\b0\cb3  \cb4\b char\b0 *\cb3  \cb4 Nazwa,\b unsigned\b0\cb3  \cb4 IleWPaczce,\b float\b0\cb3  \cb4 CenaZaSztuke,\b unsigned\b0\cb3  \cb4 Producent);
\par \cb3 	\cb4\b const\b0\cb3  \cb4 string&\cb3  \cb4 Rodzaj();\cf0\i //Tu mo¿e byæ mark¹ czy nazw¹ handlow¹ - bo mo¿e byæ przesylany dalej!
\par \i0\cb3\cf2 	\cb4\b unsigned\b0\cb3  \cb4 IleSztuk()\cb3  \cb4 \{\b return\b0\cb3  \cb4 Ile;\}
\par \cb3 	\cb4\b float\b0\cb3     \cb4 CenaZaSzt()\cb3  \cb4 \{\b return\b0\cb3  \cb4 Cena;\}
\par 
\par \cb3 	\cb4\b bool\b0\cb3  \cb4 ZrobWgListy(\b const\b0\cb3  \cb4 std::string*\cb3  \cb4 Lista,\b unsigned\b0\cb3  \cb4 Ile,\b unsigned\b0 &\cb3  \cb4 Blad);
\par 
\par \cb3   \cb4\b protected\b0 :\cf0\i //Wlasciwoœci obiektów klasy  i metody pomocnicze
\par \i0\cb3\cf2 	\cb4\cf0\i //Wlasciwoœci obiektów klasy  i metody pomocnicze
\par \i0\cb3\cf2 	\cb4\b void\b0\cb3  \cb4 RysujKsztalt(\b float\b0\cb3  \cb4 X,\b float\b0\cb3  \cb4 Y,\b float\b0\cb3  \cb4 Rad,\b unsigned\b0\cb3  \cb4 R,\b unsigned\b0\cb3  \cb4 G,\b unsigned\b0\cb3  \cb4 B);\cb3  \cb4\cf0\i //Rysowanie kszta³tu zale¿nego od typu potomnego,
\par 
\par \i0\cb3\cf2 	\cb4 PaczkaProduktow()\{Ile=\cf5 1\cf2 ;Cena=\cf5 1\cf2 ;Producent=-\cf5 1\cf2 ;\}\cf0\i //Konstruktor domyœlny ukryty
\par \i0\cb3\cf2 	\cb4 PaczkaProduktow(\b const\b0\cb3  \cb4 PaczkaProduktow*\cb3  \cb4 Wzor);\cf0\i //KONSTRUKTOR KOPIUJ¥CY
\par \i0\cb3\cf2   \cb4\cf0\i //POLE - LICZBA W PACZCE, CENA, ADRES PRODUCENTA
\par \i0\cb3\cf2 	\cb4\b unsigned\b0\cb3  \cb4 Producent;
\par \cb3 	\cb4\b unsigned\b0\cb3  \cb4 Ile;
\par \cb3 	\cb4\b float\b0\cb3     \cb4 Cena;
\par \cb3   \cb4\cf0\i //JAKIE RODZAJE:
\par \i0\cb3\cf2   \cb4\cf0\i //* Dziedzina to produkt ktorego dotyczy.
\par \i0\cf2 \};
\par 
\par \cf0\i //Klasa komunikatu finansowego - obietnice finansowe i kredytowe, umowy, proformy, przelewy
\par ////////////////////////////////////////////////////////////////////////////////
\par \i0\cf2\b class\b0\cb3  \cb4 KomunikacjaFinansowa:\b public\b0\cb3  \cb4 GeneryczneInfo
\par \{\cb3   \cb4\cf0\i //Implementacja tego co musi byæ wg. interfejsu typu podstawowego linku
\par \i0\cb3\cf2 	\cb4\b friend\b0\cb3  \cb4\b class\b0\cb3  \cb4 KonstruktorElementowModelu<KomunikacjaFinansowa>;
\par \cb3 	\cb4\b static\b0\cb3  \cb4 KonstruktorElementowModelu<KomunikacjaFinansowa>\cb3  \cb4 WirtKonstr;
\par \cb3 	\cb4 ElementModelu::WirtualnyKonstruktor*\cb3  \cb4 VKonstruktor()\cb3  \cb4 \{\cb3  \cb4\b return\b0\cb3  \cb4 &WirtKonstr;\}
\par \cb3   \cb4\b public\b0 :
\par \cb3 	\cb4\cf0\i //void ChwilaDlaCiebie(); //Zmiana stanów komunikatu - zaawansowanie przekazu
\par \i0\cb3\cf2 	\cb4 Komunikat*\cb3  \cb4 Klonuj();\cb3  \cb4\cf0\i //Robi na stercie kopie komunikatu do przechowania lub wstawienia
\par \i0\cb3\cf2 	\cb4 KomunikacjaFinansowa(\b const\b0\cb3  \cb4\b char\b0 *\cb3  \cb4 Kategoria,\b float\b0\cb3  \cb4 JakaKwota);\cf0\i //Konstruktor domyslny
\par \i0\cb3\cf2 	\cb4\b const\b0\cb3  \cb4 string&\cb3  \cb4 Rodzaj();\cf0\i //Gdzieœ w danych jest rodzaj tego komunikatu
\par \i0\cb3\cf2 	\cb4\b float\b0\cb3  \cb4 JakaKwota()\cb3  \cb4 \{\cb3  \cb4\b return\b0\cb3  \cb4 Kwota;\}
\par 
\par \cb3 	\cb4\b bool\b0\cb3  \cb4 ZrobWgListy(\b const\b0\cb3  \cb4 std::string*\cb3  \cb4 Lista,\b unsigned\b0\cb3  \cb4 Ile,\b unsigned\b0 &\cb3  \cb4 Blad);
\par \cb3   \cb4\b protected\b0 :\cf0\i //Wlasciwoœci obiektów klasy  i metody pomocnicze
\par \i0\cb3\cf2 	\cb4\b void\b0\cb3  \cb4 RysujKsztalt(\b float\b0\cb3  \cb4 X,\b float\b0\cb3  \cb4 Y,\b float\b0\cb3  \cb4 Rad,\b unsigned\b0\cb3  \cb4 R,\b unsigned\b0\cb3  \cb4 G,\b unsigned\b0\cb3  \cb4 B);\cb3  \cb4\cf0\i //Rysowanie kszta³tu zale¿nego od typu potomnego,
\par \i0\cb3\cf2 	\cb4 KomunikacjaFinansowa()\{Kwota=\cf5 0\cf2 ;\}\cf0\i //Sprywatyzowany konstruktor domyslny
\par \i0\cb3\cf2 	\cb4 KomunikacjaFinansowa(\b const\b0\cb3  \cb4 KomunikacjaFinansowa*\cb3  \cb4 Wzor):GeneryczneInfo(Wzor)
\par \cb3 		\cb4 \{\}\cf0\i //KONSTRUKTOR KOPIUJ¥CY
\par \i0\cb3\cf2 	\cb4\cf0\i //JAKIE RODZAJE:
\par \i0\cb3\cf2 	\cb4\b float\b0\cb3  \cb4 Kwota;
\par \cb3 	\cb4\cf0\i //obietnice (propozale umów) finansowe i kredytowe,
\par \i0\cb3\cf2 	\cb4\cf0\i //umowy, proformy,
\par \i0\cb3\cf2 	\cb4\cf0\i //P³ace, przelewy
\par \i0\cb3\cf2 	\cb4\cf0\i //Raporty/wyniki/transfer wiedzy na koniec umowy o finansowanie badañ
\par \i0\cb3\cf2 	\cb4\cf0\i //Partie produktów na rynek
\par \i0\cb3\cf2 	\cb4\cf0\i //pieniadze za produkty z powrotem do producenta
\par \i0\cf2 \};
\par 
\par \cf0\i //Klasa dla œwiata - realizuje odpowiedzi na wolne poszukiwania, zapytania o produkty
\par // a tak¿e wymianê gotowych produktów na konkretn¹ kasê (czyli "zbyt")
\par ////////////////////////////////////////////////////////////////////////////////
\par \i0\cf2\b class\b0\cb3  \cb4 RynekZbytu:\b public\b0\cb3  \cb4 WezelMacierzowy
\par \{\cb3   \cb4\cf0\i //Implementacja tego co musi byæ wg. interfejsu typu podstawowego wêz³a
\par \i0\cb3\cf2 	\cb4\b static\b0\cb3  \cb4 KonstruktorElementowModelu<RynekZbytu>\cb3  \cb4 WirtKonstr;
\par \cb3 	\cb4 ElementModelu::WirtualnyKonstruktor*\cb3  \cb4 VKonstruktor()\cb3  \cb4 \{\cb3  \cb4\b return\b0\cb3  \cb4 &WirtKonstr;\}
\par \cb3   \cb4\b public\b0 :
\par \cb3 	\cb4 RynekZbytu()\{\}\cf0\i //Konstruktor domyœlny
\par \i0\cb3\cf2 	\cb4\b void\b0\cb3  \cb4 ChwilaDlaCiebie();\cb3  \cb4\cf0\i //Endogenne zmiany stanów, zarz¹dzanie procesami itp.
\par \i0\cb3\cf2 	\cb4\b void\b0\cb3  \cb4 InterpretujKomunikat(Komunikat*\cb3  \cb4 Co);\cf0\i //Przyjmowanie komunikatów
\par \i0\cb3\cf2 	\cb4\b bool\b0\cb3  \cb4 ZrobWgListy(\b const\b0\cb3  \cb4 std::string*\cb3  \cb4 Lista,\b unsigned\b0\cb3  \cb4 Ile,\b unsigned\b0 &\cb3  \cb4 Blad);
\par \cb3   \cb4\b protected\b0 :\cf0\i //Wlasciwoœci obiektów klasy  i metody pomocnicze
\par \i0\cb3\cf2 	\cb4 DziedzinaWKolorze\cb3  \cb4 _DaSieSprzedac(\b const\b0\cb3  \cb4 DziedzinaWKolorze\cb3  \cb4 CoZaProdukt);\cb3  \cb4\cf0\i //Jak 0 to nie...
\par \i0\cb3\cf2   \cb4\cf0\i //GRID NISZ RYNKOWYCH:
\par \i0\cb3\cf2   \cb4\cf0\i //CO ROBI:
\par \i0\cb3\cf2   \cb4\cf0\i //* realizuje odpowiedzi na swobodne poszukiwania inspiracji - losowo z filtrem
\par \i0\cb3\cf2   \cb4\cf0\i //* zapytania o zbywalnoœæ/zapotrzebowanie na produkty z danym pomys³em
\par \i0\cb3\cf2   \cb4\cf0\i //	* Czy jest nisza rynkowa? Jak dok³adne jest dopasowanie?
\par \i0\cb3\cf2   \cb4\cf0\i //	* Czy jest pusta czy zajêta i jak dok³adnie zajêta?
\par \i0\cb3\cf2   \cb4\cf0\i //* a tak¿e realizuje wymianê gotowych produktów
\par \i0\cb3\cf2   \cb4\cf0\i // na konkretn¹ kasê (czyli "zbyt")
\par \i0\cb3\cf2   \cb4\cf0\i // Kolor (DZIEDZINA) rynku okreœla preferencje
\par \i0\cb3\cf2   \cb4\cf0\i //float SilaPreferencji;//0..1 - jak bardzo preferencja zmienia rozk³ad (?)
\par \i0\cb3\cf2   \cb4\cf0\i //albo wczytany grid o okreœlonej zawartoœci
\par \i0\cf2 \};
\par 
\par 
\par \cf0\i //Klasa dla PUBLIKATORA i UPATENTOWEGO - musi przyjmowac tylko komunikaty oficjalne
\par // a poza tym zachowuje siê podobnie do klasy bazowej
\par ///////////////////////////////////////////////////////////////////////////////////
\par \i0\cf2\b class\b0\cb3  \cb4 SystemInformacyjny:\b public\b0\cb3  \cb4 WezelMacierzowy
\par \{\cb3    \cb4\cf0\i //Implementacja tego co musi byæ wg. interfejsu typu podstawowego wêz³a
\par \i0\cb3\cf2 	\cb4\b static\b0\cb3  \cb4 KonstruktorElementowModelu<SystemInformacyjny>\cb3  \cb4 WirtKonstr;
\par \cb3 	\cb4\cf0\i //ElementModelu::WirtualnyKonstruktor* VKonstruktor() \{ return &WirtKonstr;\}  //Wyswietlanie jak klasa bazowa?
\par \i0\cb3\cf2   \cb4\b public\b0 :
\par \cb3 	\cb4 SystemInformacyjny()\{\}\cf0\i //Konstruktor domyœlny
\par \i0\cb3\cf2 	\cb4\cf0\i //void ChwilaDlaCiebie(); //Endogenne zmiany stanów, zarz¹dzanie procesami itp. - jak klasa bazowa?
\par \i0\cb3\cf2 	\cb4\b void\b0\cb3  \cb4 InterpretujKomunikat(Komunikat*\cb3  \cb4 Co);\cf0\i //Przyjmowanie komunikatów
\par \i0\cb3\cf2 	\cb4\cf0\i //bool ZrobWgListy(const std::string* Lista,unsigned Ile,unsigned& Blad);   - jak klasa bazowa?
\par \i0\cf2 \};
\par 
\par \cf0\i // Proces kreuj¹cy nowe linki - losuje wêz³y i wg. podobieñstwa tworzy link i
\par // wysy³a nim zajawkê o sobie, nadaje wagê proporcjonaln¹ do wagi wêz³a (albo...)
\par // Jak nie utworzy linku to to wysy³a przypomnienie do jakiegoœ z istniej¹cych
\par // powi¹zañ spo³ecznych zawieraj¹ce losowe bity ze swojej dziedziny.
\par // Co jakiœ czas aktualizuje dziedzinê na podstawie dziedziny swojego wêz³a.
\par // Jego procedura przechwytywania komunikatów zajmuje siê odpowiadaniem na "zaczepki"
\par // o ile pochodz¹ od kogoœ znanego, lub wartego poznania. Kieruje siê tu wag¹ linku
\par // spo³ecznego.
\par ////////////////////////////////////////////////////////////////////////////////
\par \i0\cf2\b class\b0\cb3  \cb4 ProcesSpoleczny:\b public\b0\cb3  \cb4 GenerycznyProces
\par \{
\par \cb3    \cb4\cf0\i //Implementacja tego co musi byæ wg. interfejsu typu Proces
\par \i0\cb3\cf2 	\cb4\b static\b0\cb3  \cb4 KonstruktorElementowModelu<ProcesSpoleczny>\cb3  \cb4 WirtKonstr;
\par \cb3 	\cb4 ElementModelu::WirtualnyKonstruktor*\cb3  \cb4 VKonstruktor()\cb3  \cb4 \{\cb3  \cb4\b return\b0\cb3  \cb4 &WirtKonstr;\}
\par \cb3 	\cb4\b public\b0 :
\par \cb3 		 \cb4 ProcesSpoleczny()\{\}\cf0\i //Konstruktor domyslny wykonuje robotê za pomoc¹ domyœnego GenerycznyProces()
\par 
\par \i0\cb3\cf2 	\cb4\b void\b0\cb3  \cb4 ChwilaDlaCiebie();\cb3  \cb4\cf0\i //Tworzenie nowych kontaktów i podtrzymywanie starych
\par \i0\cb3\cf2 							\cb4\cf0\i //Co jakiœ czas (7 dni?) zaczyna siê od pocz¹tku
\par \i0\cb3\cf2 	\cb4\b bool\b0\cb3  \cb4 InterpretujKomunikat(Komunikat*\cb3  \cb4 Co);\cf0\i //Ewentualnie odpowiada na komunikat
\par \i0\cb3\cf2 	\cb4\b private\b0 :
\par \cb3 	\cb4\b float\b0\cb3  \cb4 Aktywnosc;\cb3  \cb4\cf0\i //Pobierana z odpowiedniej wartoœci wêzla
\par \i0\cb3\cf2 	\cb4\cf0\i //Procedury pomocnicze skracajace zapis tego co istotne
\par \i0\cb3\cf2 	\cb4\b bool\b0\cb3  \cb4 _WyslijAutoprezentacje(\b unsigned\b0\cb3  \cb4 kanal,\b bool\b0\cb3  \cb4 calaprawda);\cb3  \cb4\cf0\i //Wysy³ania informacji o sobie
\par \i0\cb3\cf2 	\cb4\b unsigned\b0\cb3  \cb4 _StworzKanal(\b unsigned\b0\cb3  \cb4 IndInny,\b float\b0\cb3  \cb4 Waga,\b float\b0\cb3  \cb4 Parametr=\cf5 0\cf2 );\cf0\i //I nowy kanal z ju¿ obliczona wag¹
\par \i0\cb3\cf2 														\cb4\cf0\i //Jak Parametr =0 to jest losowanie ale z dodatnich!
\par \i0\cb3\cf2 	\cb4\b public\b0 :
\par \cb3 	\cb4\cf0\i //Pomocnicza funkcja statyczna do u¿ycia gdzieb¹dŸ - znajduje zadane powi¹zanie spoleczne
\par \i0\cb3\cf2 	\cb4\b static\b0\cb3   \cb4\b unsigned\b0\cb3  \cb4 _JestPowiazanySocjalnie(\b unsigned\b0\cb3  \cb4 Startowy,\b unsigned\b0\cb3  \cb4 Docelowy);
\par \};
\par 
\par \cf0\i // Proces obci¹¿aj¹cy wêze³ i na koñcu wysy³aj¹cy raport do odbiorcy lub wêz³a
\par // nadrzêdnego (linkiem Adm.) i wzawiaj¹cy dzia³anie od poczatku bez nowego procesu
\par /////////////////////////////////////////////////////////////////////////////////////
\par \i0\cf2\b class\b0\cb3  \cb4 ProcesRaportowany:\b public\b0\cb3  \cb4 GenerycznyProces
\par \{
\par \cb3    \cb4\cf0\i //Implementacja tego co musi byæ wg. interfejsu typu Proces
\par \i0\cb3\cf2 	\cb4\b static\b0\cb3  \cb4 KonstruktorElementowModelu<ProcesRaportowany>\cb3  \cb4 WirtKonstr;
\par \cb3 	\cb4 ElementModelu::WirtualnyKonstruktor*\cb3  \cb4 VKonstruktor()\cb3  \cb4 \{\cb3  \cb4\b return\b0\cb3  \cb4 &WirtKonstr;\}
\par \cb3 	\cb4\b public\b0 :
\par \cb3 		 \cb4 ProcesRaportowany()\{\}\cf0\i //Konstruktor domyslny wykonuje robotê za pomoc¹ domyœnego GenerycznyProces()
\par 
\par \i0\cb3\cf2 	\cb4\b void\b0\cb3  \cb4 ChwilaDlaCiebie();\cb3  \cb4\cf0\i //Endogenne zmiany stanów, popychanie pracy do przodu itp.
\par \i0\cb3\cf2 							\cb4\cf0\i //Na koniec wysy³a raport i zaczyna siê od pocz¹tku
\par \i0\cb3\cf2 	\cb4\b bool\b0\cb3  \cb4 InterpretujKomunikat(Komunikat*\cb3  \cb4 Co);\cf0\i //Przesyla dalej raporty, wysy³a kase, inkasuje kasê
\par \i0\cb3\cf2 	\cb4\b private\b0 :
\par \cb3 	\cb4\b bool\b0\cb3  \cb4 _WyslijRaportOdbiorcy();\cb3  \cb4\cf0\i //Pomocnicza procedura wysy³ania raportu, gdy proces gotowy
\par \i0\cf2 \};
\par 
\par \cf0\i // Proces zajmuj¹cy siê dawaniem grantów, doatacji lub po¿yczek na procent
\par /////////////////////////////////////////////////////////////////////////////////////
\par \i0\cf2\b class\b0\cb3  \cb4 ProcesGrantowoPozyczkowy:\b public\b0\cb3  \cb4 GenerycznyProces
\par \{
\par \cb3    \cb4\cf0\i //Implementacja tego co musi byæ wg. interfejsu typu Proces
\par \i0\cb3\cf2 	\cb4\b static\b0\cb3  \cb4 KonstruktorElementowModelu<ProcesGrantowoPozyczkowy>\cb3  \cb4 WirtKonstr;
\par \cb3 	\cb4 ElementModelu::WirtualnyKonstruktor*\cb3  \cb4 VKonstruktor()\cb3  \cb4 \{\cb3  \cb4\b return\b0\cb3  \cb4 &WirtKonstr;\}
\par \cb3 	\cb4\b public\b0 :
\par \cb3 		 \cb4 ProcesGrantowoPozyczkowy();\cf0\i //Konstruktor domyslny wykonuje robotê za pomoc¹ domyœnego GenerycznyProces()
\par 
\par \i0\cb3\cf2 	\cb4\b void\b0\cb3  \cb4 ChwilaDlaCiebie();\cb3  \cb4\cf0\i //Endogenne zmiany stanów, popychanie pracy do przodu itp.
\par \i0\cb3\cf2 	\cb4\b bool\b0\cb3  \cb4 InterpretujKomunikat(Komunikat*\cb3  \cb4 Co);\cf0\i //Odbiera propozycje, a przydziela kasê
\par \i0\cb3\cf2 	\cb4\b private\b0 :
\par \cb3 	\cb4\cf0\i //Wewnetrzne w³aœciwoœci. Mo¿e u¿ywaæ te¿ cech wêz³a, np. jego sk³onnoœci do ryzyka
\par \i0\cb3\cf2 	\cb4\b float\b0\cb3  \cb4 Fundusz;\cb3  \cb4\cf0\i //Findusze do podzia³u
\par \i0\cb3\cf2 	\cb4\b float\b0\cb3  \cb4 OczekiwanyZwrot;\cf0\i //0 - dotacja, do 100% po¿yczki czêœcowo zwrotne, pow 100% pozyczki komercyjne
\par \i0\cf2 \};
\par 
\par \cf0\i // Proces badawczy produkuje wyniki naukowe do celów publikacji, patentowania,
\par // lub na czyjeœ zamówienie, st¹d ma w³aœciwoœæ "ZaplanowanyOdbiorca".
\par // Mo¿e siê wznawiaæ orza generowaæ inne procesy badawcze!!!
\par ////////////////////////////////////////////////////////////////////////////////
\par \i0\cf2\b class\b0\cb3  \cb4 ProcesBadawczy:\b public\b0\cb3  \cb4 GenerycznyProces
\par \{
\par \cb3 	\cb4\b friend\b0\cb3  \cb4\b class\b0\cb3  \cb4 JednostkaBadawcza;\cb3  \cb4\cf0\i //¯eby móg³ sobie sam poustawiaæ pola jak go tworzy od nowa
\par \i0\cb3\cf2    \cb4\cf0\i //Implementacja tego co musi byæ wg. interfejsu typu Proces
\par \i0\cb3\cf2 	\cb4\b friend\b0\cb3  \cb4\b class\b0\cb3  \cb4 KonstruktorElementowModelu<ProcesBadawczy>;
\par \cb3 	\cb4\b static\b0\cb3  \cb4 KonstruktorElementowModelu<ProcesBadawczy>\cb3  \cb4 WirtKonstr;
\par \cb3 	\cb4 ElementModelu::WirtualnyKonstruktor*\cb3  \cb4 VKonstruktor()\cb3  \cb4 \{\cb3  \cb4\b return\b0\cb3  \cb4 &WirtKonstr;\}
\par \cb3 	\cb4\b public\b0 :
\par \cb3 	\cb4\cf0\i //Konstruktor z parametrami do tworzenia procesu w kodzie
\par \i0\cb3\cf2 	\cb4\b enum\b0\cb3  \cb4 EfektNaukowy\cb3  \cb4 \{\cb3  \cb4 NIEWIEM=-\cf5 1\cf2 ,\cb3  \cb4 PUBLIKACJA,\cb3  \cb4 PATENT,\cb3  \cb4 RAPORT\cb3  \cb4 \};
\par \cb3 	\cb4 ProcesBadawczy(\b const\b0\cb3  \cb4\b char\b0 *\cb3  \cb4 Nazwa,EfektNaukowy\cb3  \cb4 RodzajProd=NIEWIEM,\b unsigned\b0\cb3  \cb4 ZaplanowanyOdbiorca=-\cf5 1\cf2 );\cf0\i //Mo¿e od razu znaæ odbiorce i rodzaj produktu albo nie
\par 
\par \i0\cb3\cf2 	\cb4\b void\b0\cb3  \cb4 ChwilaDlaCiebie();\cb3  \cb4\cf0\i //Endogenne zmiany stanów, popychanie pracy do przodu itp.
\par \i0\cb3\cf2 							\cb4\cf0\i //Na koniec tworzy swoj¹ kopie i sibie przeznacza do skasowania
\par \i0\cb3\cf2 	\cb4\b bool\b0\cb3  \cb4 InterpretujKomunikat(Komunikat*\cb3  \cb4 Co);\cf0\i //Przyjmowanie komunikatów
\par \i0\cb3\cf2 	\cb4\b protected\b0 :\cb3  \cb4\cf0\i //Ukryty przed innymi konstruktor domyslny wykonuje robotê za pomoc¹ domyœnego GenerycznyProces()
\par \i0\cb3\cf2 	\cb4 ProcesBadawczy()\{\cb3  \cb4 ZaplanowanyEfekt=NIEWIEM;\cb3  \cb4 ZaplOdbiorca=-\cf5 1\cf2 ;\}
\par \cb3 	\cb4\b virtual\b0\cb3  \cb4\b float\b0\cb3  \cb4 _KalkulujKosztBadan();\cb3  \cb4\cf0\i //Furtka do "realistycznego" kalkulowania kosztów badañ
\par \i0\cb3\cf2 	\cb4\b bool\b0\cb3  \cb4 _WyslijInformacje(\b unsigned\b0\cb3  \cb4 link=-\cf5 1\cf2 );\cb3  \cb4\cf0\i //Do rozsylania informacji ¿e siê czyms takim zajmujemy - socjalna lub oficjalna
\par \i0\cb3\cf2 	\cb4\b bool\b0\cb3  \cb4 _WyslijPublikacje();\cb3  \cb4\cf0\i //Pomocnicza procedura publikowania - domyslnie szuka wêz³a PUBLIKATOR
\par \i0\cb3\cf2 	\cb4\b bool\b0\cb3  \cb4 _WyslijPatent();\cb3      \cb4\cf0\i //Pomocnicza procedura publikowania - domyslnie szuka wêz³a UPATENTOWY, publikacja wyklucza patent
\par \i0\cb3\cf2 	\cb4\b bool\b0\cb3  \cb4 _WyslijRaport();\cb3      \cb4\cf0\i //Pomocnicza procedura raportowania - do odbiorcy albo administracji jak brak
\par \i0\cb3\cf2 	\cb4\cf0\i //G³ówna specyficzna zmienna
\par \i0\cb3\cf2 	\cb4\b private\b0 :
\par \cb3 	\cb4 EfektNaukowy\cb3  \cb4 ZaplanowanyEfekt;\cf0\i //Jakiego rodzaju efekt ma tu byæ
\par \i0\cb3\cf2 	\cb4\b unsigned\b0\cb3      \cb4 ZaplOdbiorca;\cf0\i //Czy znany jest odbiorca i kto to
\par \i0\cf2 \};
\par 
\par \cf0\i // Proces zajmuj¹cy siê produkcj¹ i wysy³¹niem towarów do odbiorcy lub na rynek
\par // Wysy³a pod koniec dzia³ania, a potem, jeœli wys³anie siê powiod³o to tworzy
\par // swoj¹ kopiê nieco bardziej efektywn¹ (szybsz¹)
\par ////////////////////////////////////////////////////////////////////////////////
\par \i0\cf2\b class\b0\cb3  \cb4 ProcesProdukcyjny:\b public\b0\cb3  \cb4 GenerycznyProces
\par \{
\par \cb3    \cb4\cf0\i //Implementacja tego co musi byæ wg. interfejsu typu Proces
\par \i0\cb3\cf2 	\cb4\b friend\b0\cb3  \cb4\b class\b0\cb3  \cb4 KonstruktorElementowModelu<ProcesProdukcyjny>;
\par \cb3 	\cb4\b static\b0\cb3  \cb4 KonstruktorElementowModelu<ProcesProdukcyjny>\cb3  \cb4 WirtKonstr;
\par \cb3 	\cb4 ElementModelu::WirtualnyKonstruktor*\cb3  \cb4 VKonstruktor()\cb3  \cb4 \{\cb3  \cb4\b return\b0\cb3  \cb4 &WirtKonstr;\}
\par \cb3 	\cb4\b public\b0 :
\par \cb3 	\cb4\cf0\i //Konstruktor z parametrami do tworzenia procesu w kodzie
\par \i0\cb3\cf2 	\cb4 ProcesProdukcyjny(\b unsigned\b0\cb3  \cb4 IleSztuk,\b float\b0\cb3  \cb4 JakaCena=\cf5 1\cf2 ,\b unsigned\b0\cb3  \cb4 IleWPaczce=-\cf5 1\cf2 );\cf0\i //Dzieli na 10 pak jak -1
\par 
\par \i0\cb3\cf2 	\cb4\b void\b0\cb3  \cb4 ChwilaDlaCiebie();\cb3  \cb4\cf0\i //Endogenne zmiany stanów, popychanie pracy do przodu itp.
\par \i0\cb3\cf2 							\cb4\cf0\i //Na koniec tworzy swoj¹ kopie i sibie przeznacza do skasowania
\par \i0\cb3\cf2 	\cb4\b bool\b0\cb3  \cb4 InterpretujKomunikat(Komunikat*\cb3  \cb4 Co);\cf0\i //Przyjmowanie komunikatów
\par \i0\cb3\cf2 	\cb4\b protected\b0 :\cb3  \cb4\cf0\i //Ukryty przed innymi konstruktor domyslny wykonuje robotê za pomoc¹ domyœnego GenerycznyProces()
\par \i0\cb3\cf2 	\cb4 ProcesProdukcyjny()\{Zapotrzebowanie=\cf5 100\cf2 ;WPaczke=\cf5 10\cf2 ;Cena=\cf5 10\cf2 ;Wyslano=\cf5 0\cf2 ;\}
\par \cb3 	\cb4\b virtual\b0\cb3  \cb4\b float\b0\cb3  \cb4 _KalkulujKosztProduktu();\cb3  \cb4\cf0\i //Furtka do "realistycznego" kalkulowania ceny produktu
\par \i0\cb3\cf2 	\cb4\b bool\b0\cb3  \cb4 _WyslijProduktyNaRynek();\cb3  \cb4\cf0\i //Pomocnicza procedura wysy³ania na rynek przy koñcu procesu produkcji
\par \i0\cb3\cf2 	\cb4\cf0\i //G³ówna specyficzna zmienna
\par \i0\cb3\cf2 	\cb4\b private\b0 :
\par \cb3 	\cb4\b unsigned\b0\cb3  \cb4 Zapotrzebowanie;\cb3  \cb4\cf0\i //Na ile sztuk produktu szacujemy zapotrzebowanie
\par \i0\cb3\cf2 	\cb4\b float\b0\cb3     \cb4 Cena;\cb3 	  \cb4\cf0\i //Jaka cena producenta za sztukê
\par \i0\cb3\cf2 	\cb4\b unsigned\b0\cb3  \cb4 WPaczke;\cb3  \cb4\cf0\i //Po ile sztuk siê miesci w paczce
\par \i0\cb3\cf2 	\cb4\b unsigned\b0\cb3  \cb4 Wyslano;\cb3  \cb4\cf0\i //Ile juz posz³o
\par \i0\cf2 \};
\par 
\par \cf0\i // Proces poszukuj¹cy pomys³ów na nowe produkty i "odpalajacy" czasem procesy TT
\par ////////////////////////////////////////////////////////////////////////////////
\par \i0\cf2\b class\b0\cb3  \cb4 ProcesPoszukiwanTT:\b public\b0\cb3  \cb4 GenerycznyProces
\par \{
\par \cb3    \cb4\cf0\i //Implementacja tego co musi byæ wg. interfejsu typu Proces
\par \i0\cb3\cf2 	\cb4\b static\b0\cb3  \cb4 KonstruktorElementowModelu<ProcesPoszukiwanTT>\cb3  \cb4 WirtKonstr;
\par \cb3 	\cb4 ElementModelu::WirtualnyKonstruktor*\cb3  \cb4 VKonstruktor()\cb3  \cb4 \{\cb3  \cb4\b return\b0\cb3  \cb4 &WirtKonstr;\}
\par \cb3 	\cb4\b public\b0 :
\par \cb3 		 \cb4 ProcesPoszukiwanTT();\cf0\i //Konstruktor domyslny wykonuje robotê za pomoc¹ domyœnego GenerycznyProces()
\par \i0\cb3\cf2 	\cb4\b bool\b0\cb3  \cb4 InterpretujKomunikat(Komunikat*\cb3  \cb4 Co);\cf0\i //Pobiera ró¿ne komunikaty i ³¹czy z nich pomys³y
\par \i0\cb3\cf2 									\cb4\cf0\i //Tak ¿eby by³y zgodne z profilem firmy. Od czasu do czasu odpala
\par \i0\cb3\cf2 									\cb4\cf0\i //zwyk³y ProcesTT
\par \i0\cb3\cf2 	\cb4\b void\b0\cb3  \cb4 ChwilaDlaCiebie();\cb3  \cb4\cf0\i //Endogenne zmiany stanów - nigdy siê nie koñczy...
\par \i0\cb3\cf2 	\cb4\b private\b0 :
\par \cb3 	\cb4\cf0\i //...
\par \i0\cf2 \};
\par 
\par \cf0\i // Proces przygotowuj¹cy nowy produkt - musi skompletowaæ wszystkie sk³adniki
\par //////////////////////////////////////////////////////////////////////////////////
\par \i0\cf2\b class\b0\cb3  \cb4 ProcesTransferuTech:\b public\b0\cb3  \cb4 GenerycznyProces
\par \{
\par \cb3    \cb4\cf0\i //Implementacja tego co musi byæ wg. interfejsu typu Proces
\par \i0\cb3\cf2 	\cb4\b friend\b0\cb3  \cb4\b class\b0\cb3  \cb4 KonstruktorElementowModelu<ProcesTransferuTech>;
\par \cb3 	\cb4\b static\b0\cb3  \cb4 KonstruktorElementowModelu<ProcesTransferuTech>\cb3  \cb4 WirtKonstr;
\par \cb3 	\cb4 ElementModelu::WirtualnyKonstruktor*\cb3  \cb4 VKonstruktor()\cb3  \cb4 \{\cb3  \cb4\b return\b0\cb3  \cb4 &WirtKonstr;\}
\par \cb3 	\cb4\b public\b0 :
\par \cb3 	\cb4 ProcesTransferuTech(DziedzinaWKolorze\cb3  \cb4 Pomysl);
\par \cb3 	\cb4\cf0\i //Endogenne zmiany stanów - koñczy siê sukcesem a  lbo pora¿k¹ (z braku czasu lub œrodków)
\par \i0\cb3\cf2 	\cb4\cf0\i //Tu wysy³a ró¿ne zapytania w zaleznoœci od stanu checklisty. Sykces jest wtedy jak odchaczy wszystko
\par \i0\cb3\cf2 	\cb4\b void\b0\cb3  \cb4 ChwilaDlaCiebie();
\par \cb3 	\cb4\cf0\i //Poszukuje odpowiedzi na swoje pytania. W razie sukcesu odchacza,
\par \i0\cb3\cf2 	\cb4\cf0\i //a w przypadku koniecznoœci ustalenia formalej koopereacji tworzy linki kooperacyjne.
\par \i0\cb3\cf2 	\cb4\cf0\i //W razie pora¿ki zamienia linki koop. na s³abe powi¹zania socjalne (gdy ich brak)
\par \i0\cb3\cf2 	\cb4\cf0\i //W razie sukcesu przetwarza linki koop. mocne socjalne (lub wzmacnia)
\par \i0\cb3\cf2 	\cb4\cf0\i //I jeœli nie dzia³a na bezpoœrednim producencie to sieæ kooperacji mo¿e przerzuciæ na produ
\par \i0\cb3\cf2 	\cb4\cf0\i //na producenta bo jest konieczna do placenia oplat licencyjnych z zysku.
\par \i0\cb3\cf2 	\cb4\b bool\b0\cb3  \cb4 InterpretujKomunikat(Komunikat*\cb3  \cb4 Co);
\par \cb3 	\cb4\b private\b0 :
\par \cb3 	\cb4 ProcesTransferuTech();\cb3  \cb4\cf0\i //Konstruktor domyslny wykonuje robotê za pomoc¹ domyœnego GenerycznyProces()
\par \i0\cb3\cf2 	\cb4\b void\b0\cb3  \cb4 _ObsluzPorazke();\cb3  \cb4\cf0\i //W razie pora¿ki zamienia linki koop. na s³abe powi¹zania socjalne (gdy ich brak) lub obni¿a wagi
\par \i0\cb3\cf2 	\cb4\b void\b0\cb3  \cb4 _ObsluzSukces();\cb3   \cb4\cf0\i //Przekazuje produkt do produkcji i przeksztalca sieæ linków
\par \i0\cb3\cf2 	\cb4\cf0\i //Pola chekclisty
\par \i0\cb3\cf2 	\cb4\b struct\b0\cb3  \cb4 ElementListy\cb3  \cb4 \{
\par \cb3 	\cb4\b double\b0\cb3  \cb4 Kiedy;\b unsigned\b0\cb3  \cb4 Wykonawca;\b bool\b0\cb3  \cb4 Check;
\par \cb3 	\cb4 ElementListy()\{Kiedy=-\cf5 1\cf2 ;Wykonawca=-\cf5 1\cf2 ;Check=\b false\b0 ;\}
\par \cb3     \cb4 \};
\par \cb3 	\cb4\b static\b0\cb3  \cb4\b const\b0\cb3  \cb4\b unsigned\b0\cb3  \cb4 PRODUCENT=\cf5 24\cf2 ;\cb3     \cb4\cf0\i //Gdzie zaznaczamy kto wyprodukuje
\par \i0\cb3\cf2 	\cb4\b static\b0\cb3  \cb4\b const\b0\cb3  \cb4\b unsigned\b0\cb3  \cb4 FINANSOWANIE=\cf5 25\cf2 ;\cb3  \cb4\cf0\i //Gdzie zaznaczamy kto to finansuje
\par \i0\cb3\cf2 	\cb4 ElementListy\cb3  \cb4 Fragmenty[\cf5 32\cf2 ];\cf0\i //Sk¹d s¹ poszczególne fragmenty/elementy produktu
\par \i0\cf2 \};
\par 
\par \cf0\i /********************************************************************/
\par /*			          OPI  version 2011                             */
\par /********************************************************************/
\par /*           THIS CODE IS DESIGNED & COPYRIGHT  BY:                 */
\par /*            W O J C I E C H   B O R K O W S K I                   */
\par /*    Instytut Studiow Spolecznych Uniwersytetu Warszawskiego       */
\par /*        WWW:  http://wwww.iss.uw.edu.pl/borkowski/                */
\par /*                                                                  */
\par /*                               (Don't change or remove this note) */
\par /********************************************************************/
\par \i0\cf1 #endif
\par }